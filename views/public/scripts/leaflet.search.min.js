$(document).ready(function () {
  var filterType = null, filterShape = null, filterArray = [], filteredLayers = [];
  var filterHTML = null;
  var searchedVal = null;
  function getFilterForm(){
    return formBuilder("searchForm", ['agency', 'gps_date_search', 'primary_ob', 't_e_specie_search'], null).show();
  }
  function collectFilterData(form) {
    const obj = {};
    $(form).serializeArray().reduce(function(i, item) {
       if (item.value === '' || item.value === 'select' || (item.name === 'agency' && item.value == -1)) {
          // do nothing
       } else if (item.name === 'agency') {
          obj[item.name] = parseInt(item.value);
       } else {
          obj[item.name] = item.value;
       }
    }, {});
    return obj;
    
  }
  $("#filterForm").html(getFilterForm())
  $("#filterSearch").click(function(){
    $("#filterError").hide();
    $("#searchStep").hide();
    filterHTML = $("#searchFilters").clone(true, true);
    $("#searchFilters").show();
    
  });
  
  $(".filterType a[data-toggle=tab]").click(function(e) {
    if(filterType == e.target.attributes[1].value){
      setTimeout(function(){
        $(".filterType li").removeClass("active")
        $("#markerFilter")[0].parentElement.className = ""
        $("#lineFilter")[0].parentElement.className = ""
        $("#polygonFilter")[0].parentElement.className = ""
        $("#searchForm select[name=t_e_specie]").prop('disabled', true);
        if (filterType == "Disturbance")
          $("#searchForm select[name=t_e_specie]").prop('disabled', false);
      }, 100);
      filterType = null;
    }
    else {
      $(".filterShape li").removeClass("active");
      filterType = $(this).attr("value");
      filterShape = null;
      if (filterType == "Barrier") {
        $("#markerFilter")[0].parentElement.className = "disabled"
        $("#lineFilter")[0].parentElement.className = "disabled"
        $("#polygonFilter")[0].parentElement.className = "disabled"
      }
      else {
        $("#markerFilter")[0].parentElement.className = ""
        $("#lineFilter")[0].parentElement.className = ""
        $("#polygonFilter")[0].parentElement.className = ""
        $("#searchForm select[name=t_e_specie]").prop('disabled', true);
        if (filterType == "Disturbance")
          $("#searchForm select[name=t_e_specie]").prop('disabled', false);
      }
    }
    //changeFilterForm()
  });
  $(".filterShape a[data-toggle=tab]").click(function(e) {
    if ($(e.target.parentElement).hasClass("disabled")) {
      e.preventDefault();
      return false;
    }
    else if(filterShape == e.target.attributes[2].value){
      setTimeout(function(){
        $(".filterShape li").removeClass("active")
      }, 100);
      filterShape = null;
    }
    else{
      filterShape = $(this).attr("value");
      //changeFilterForm()
    }
  });
  $("#filterSearchButton").click(function(){
    filterArray = collectFilterData("#searchForm");
    if (filterArray.length == 0 && !filterShape && !filterType) { 
      $("#filterError").show();
      $("#filterClear").hide();
      return;
    }
    $("#filterClear").show();
    $("#searchFilters").hide();
    $("#searchStep").show();
    testSearch()
    
  })
  function getAgencyName(agency)
  {
    switch (agency) {
      case 0:
        return "BLM";
        break;
      case 1:
        return "NPS";
        break;
      case 2:
        return "FS";
        break;
      case 3:
        return "FWS";
        break;
      default:
        return "NULL"
        break;
    }
  }
  function clearFilters(){
    for(var prop in control._layers) {
      if (control._layers[prop].name.indexOf("Disturbance") != -1 || control._layers[prop].name.indexOf("Restoration")  != -1 || control._layers[prop].name.indexOf("Barrier")  != -1)
        map.addLayer(control._layers[prop].layer)
    }
    searchMapFeatures();
  }
  $("#filterBack").click(function() {
    $("#searchFilters").hide()
    $("#searchFilters").replaceWith(filterHTML)
    $("#searchStep").show();
  })
  $('#filterClear').click(function(){
    $("#filterForm").html(getFilterForm)
    filterShape = filterType = null;
    $(".filterShape li").removeClass("active")
    $(".filterType li").removeClass("active")
    $("#markerFilter")[0].parentElement.className = ""
    $("#lineFilter")[0].parentElement.className = ""
    $("#polygonFilter")[0].parentElement.className = ""
    $("#searchForm select[name=t_e_specie]").prop('disabled', false);
    clearFilters();
    $(this).hide();
    $("#filterSearch").show();
  });
  
  function testSearch(){
    var compareString = "";
    var indexes = [];
    filteredLayers = [];
    
    if (filterType)
      compareString = filterType;
    if (filterShape && filterType != "Barrier")
      compareString += (" "+filterShape);
      
    for(var prop in control._layers) {
      if (compareString != "" && control._layers[prop].name.indexOf(compareString) != -1) {
        map.addLayer(control._layers[prop].layer)
        indexes.push(prop)
      }
      else if (control._layers[prop].name.indexOf("Disturbance") != -1 || control._layers[prop].name.indexOf("Restoration")  != -1 || control._layers[prop].name.indexOf("Barrier")  != -1)
        map.removeLayer(control._layers[prop].layer)
    }
    
    
    for (var prop in indexes){
      for (var index in control._layers[indexes[prop]].layer._layers){
        var layer = control._layers[indexes[prop]].layer._layers[index];
        layer.type = control._layers[indexes[prop]].name
        filteredLayers.push(layer);
        for (var name in filterArray){
          if (filterArray[name] != layer.feature.properties[name]){
            map.removeLayer(filteredLayers.pop())
            break;
          }
        }
        
      }
    }
    createFilteredList(filteredLayers)
    
  }
  
  function createFilteredList(featureList){
    $("#filteredFeatures").html("");
    if (featureList.length == 0)
      $("#filteredFeatures").html("<tr><td colspan=42>No records were found for selected filters</td></tr>");
    for (var index in featureList){
      var props = featureList[index].feature.properties;
      var row = $("<tr>", {value: index}).append($("<td>", {text: props.gid}))
                         .append($("<td>", {text: featureList[index].type}))
                         .append($("<td>", {text: getAgencyName(props.agency)}))
                         .append($("<td>", {text: props.region}))
                         .append($("<td>", {text: props.dist_code ? props.dist_code : props.resto_code ? props.resto_code : props.barr_code}))
                         .append($("<td>", {text: props.gps_date}))
                         .append($("<td>", {text: props.primary_ob}))
                         .append($("<td>", {text: props.t_e_specie}))
                         .click(function(e){
                           featureList[e.currentTarget.attributes[0].value].fireEvent('click'); 
                         })
      $("#filteredFeatures").append(row);
    }
  }
  function searchMapFeatures(){
    filteredLayers = [];
    for(var index in map._targets){
      if (map._targets[index].feature != null) {
        var match = false;
        var feature = map._targets[index].feature.properties;
        for (var prop in feature)
        {
          if (prop == "agency")
          {
            if (getAgencyName(feature[prop]).toLowerCase().includes(searchedVal)){
                match = true;
                break;
            }
          }
          else if (typeof feature[prop] === 'string')
            if (feature[prop].toLowerCase().includes(searchedVal)){
                match = true;
                break;
            }
        }
        if (match == true)
          filteredLayers.push(map._targets[index]);
      }
    }
    createFilteredList(filteredLayers);
  }
  $("#searchButton").click(function(){
    //console.log($("#searchID").val())
    searchedVal = $("#searchID").val().toLowerCase();
    searchMapFeatures();
  })
});